name: D

on:
  push:
    branches-ignore:
      - travis-*
      - circleci-*
      - appveyor-*
      - dustmite-*
      - gh-pages

  pull_request:
    branches-ignore:
      - travis-*
      - circleci-*
      - appveyor-*
      - dustmite-*
      - gh-pages

jobs:
  build:
    name: 'Everything'
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        dc: [ dmd-latest, dmd-2.096.0, ldc-latest, ldc-1.26.0 ]

    runs-on: ${{ matrix.os }}
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: actions/checkout@v2

    - name: 'Install cURL on Linux'
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install libcurl4-openssl-dev

    - name: 'Install D compiler'
      uses: dlang-community/setup-dlang@v1
      with:
        compiler: ${{ matrix.dc }}

    - name: 'Build and test'
      continue-on-error: false
      run: |
        dub test || exit 1
        dub build --nodeps -b debug          || exit 1
        dub build --nodeps -b plain          || exit 1
        dub build --nodeps -b release        || exit 1
        dub build --nodeps -b debug   -c dev || exit 1
        dub build --nodeps -b plain   -c dev || exit 1
        dub build --nodeps -b release -c dev || exit 1

    - name: 'Generate documenation'
      if: matrix.dc == 'dmd-latest' && matrix.os == 'ubuntu-latest' && success()
      run: |
        dub fetch adrdox
        dub run adrdox -- -ip --header-title="kameloso IRC bot" source
        cp -rv .circleci generated-docs

    - name: 'Deploy documentation to GitHub Pages'
      if: matrix.dc == 'dmd-latest' && matrix.os == 'ubuntu-latest' && success()
      uses: crazy-max/ghaction-github-pages@v2.2.0
      with:
        target_branch: gh-pages
        keep_history: false
        allow_empty_commit: true
        build_dir: generated-docs
